buildscript {
	repositories {
		mavenCentral()
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
	}
	
	dependencies {
	
	}
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'distribution'

ext {
	configFile = file 'build.properties'
	configFile.withReader {
		def prop = new Properties()
		prop.load(it)
		config = new ConfigSlurper().parse prop
	}
	appName = "${config.appName}"
	buildNumber = System.getenv().get('BUILD_NUMBER') ?: 'dev'
	gdxVersion = '1.6.1'
	
	mainClass = 'com.skettios.lpreboot.LPReboot'
}

version = "${config.majorVersion}.${config.minorVersion}.${buildNumber}-${config.releaseType}"

repositories {
	mavenCentral()
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	maven { url "https://oss.sonatype.org/content/repositories/releases/" }
}

dependencies {
	compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
	compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	compile "com.kotcrab.vis:vis-ui:0.7.7"
	compile "org.apache.logging.log4j:log4j-core:2.3"
	compile "net.lingala.zip4j:zip4j:1.3.2"
	compile "com.jtattoo:JTattoo:1.6.11"
	compile fileTree(dir: 'libs', include: 'jnlua-1.0.4.jar')
	compile fileTree(dir: 'libs', include: 'jnlua-1.0.4-natives.jar')
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources {
			srcDir 'src/main/resources'
		}
	}
}

processResources {
	from(sourceSets.main.resources.srcDirs) {
		include '**/*.json'
		include '**/*.lua'
	
		expand(version: project.version)
	}
	
	from (sourceSets.main.resources.srcDirs) {
		exclude '**/*.json'
		exclude '**/*.lua'
	}
}

distributions {
    main {
        baseName = "${appName}"
        contents {
            from { 'build/libs' }
        }
    }
}

distTar {
    archiveName "${appName}-${version}.tar"
}

distZip {
    archiveName "${appName}-${version}.zip"
}

compileJava {
	doFirst {
		source = 'build/sources'
	
		copy {
			from 'src/main/java'
			into 'build/sources'
		}
	}
}

task copyResources(type: Copy) {
	from sourceSets.main.resources.srcDirs[0]
	into 'bin'
}

task run(dependsOn: [classes, copyResources], type: JavaExec) {
	if (!new File("bin").exists())
		new File("bin").mkdir()

	main = mainClass
	classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = 'bin'
    ignoreExitValue = true
}

task buildJar(dependsOn: classes, type: Jar) {
	archiveName = 'Summer-Project.jar'

	delete('build/libs')
	
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir) {
		exclude 'base'
		exclude 'assets.textures'
		exclude 'audio'
	}
    from {configurations.compile.collect {zipTree(it)}}

    manifest {
        attributes 'Main-Class': mainClass
    }
}

task dist(dependsOn: buildJar) {
	doFirst {
		delete('build/distributions')
	}

	doLast {
		distTar.execute()
		distZip.execute()
	}
}

tasks.eclipse.doLast {
	delete('.project')
}